# This pipeline is to build anax binaries

name: anax-build-test

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the anax-build branch
on:
  pull_request:
    branches:
      - master
      - v2.30
      - v2.29
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        architecture: ['amd64', 'arm64', 'armhf', 'ppc64el']
        platform: ['linux', 'mac']
        exclude:
          - architecture: "armhf"
            platform: "mac"
          - architecture: "ppc64el"
            platform: "mac"
    
    steps:
      # auth docker
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKER_USER}}
          password: ${{secrets.DOCKER_TKN}}

      - name: Checkout Github Repo
        uses: actions/checkout@v2

      # configure version env variables
      - name: Config Version Variables
        run: ./.github/scripts/configure_versions_script.sh
        env:
          GITHUB_BUILD_NUMBER: ${{github.run_number}}
      
      - name: Test Env Var
        run: echo $ANAX_IMAGE_VERSION

      - name: Make Debian Packages
        if: matrix.architecture != 'mac'
        run: make debpkgs
        env:
          arch: ${{matrix.architecture}}
          IMAGE_REPO:
          BUILD_NUMBER: ${{github.run_number}}
          VERSION:
          DISTRO:
          


  # test:
  #   # The type of runner that the job will run on
  #   runs-on: ubuntu-20.04
  #   strategy:
  #     matrix:
  #       tests: ["NOLOOP=1", "NOLOOP=1 TEST_PATTERNS=sall"]
  #   env:
  #     GOPATH: /home/runner/work/anax/anax/go
  #   # Steps represent a sequence of tasks that will be executed as part of the job
  #   steps:
  #     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
  #     - uses: actions/checkout@v2
  #       with:
  #          path: go/src/github.com/${{github.repository}}
      
  #     # prepare the environment
  #     - name: Set up golang 1.19.2
  #       uses: actions/setup-go@v2
  #       with:
  #          go-version: '1.19.2'

  #     # build anax binaries
  #     - name: Build anax binaries
  #       run: cd ${GOPATH}/src/github.com/${GITHUB_REPOSITORY} && make
          
  #     # build the e2edev docker images 
  #     - name: Build the e2edev docker images
  #       run: cd ${GOPATH}/src/github.com/${GITHUB_REPOSITORY} && make -C test build-remote

  #     # E2E development test
  #     - name: E2E dev-test
  #       run: cd ${GOPATH}/src/github.com/${GITHUB_REPOSITORY} && make -C test clean && make -C test test TEST_VARS=${{matrix.tests}}
