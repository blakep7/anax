# This pipeline is to build anax binaries
name: anax-build-test

# Controls when the action will run. Workflow is triggered on pull request to the listed branches.
on:
  pull_request:
    branches:
      - master
      - v2.30
      - v2.29
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        architecture: ['amd64', 'arm64', 'armhf', 'ppc64el']
        platform: ['linux', 'mac']
        exclude:
          - architecture: 'armhf'
            platform: 'mac'
          - architecture: 'ppc64el'
            platform: 'mac'
    
    env:
      arch: ${{matrix.architecture}}
      opsys: ${{matrix.platform}} #Needs to be "Linux" or "Darwin" (Darwin is macOS)
      BUILD_NUMBER: ${{github.run_number}}
      IMAGE_REPO: blakep7 #Change to secret?
      ANAX_IMAGE_VERSION: ''      # Updated by "Config version variables step"
      CSS_IMAGE_VERSION: ''
      ESS_IMAGE_VERSION: ''
      GOPATH: /home/runner/work/anax/anax/go


    steps:
      # Authenticate to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKER_USER}}
          password: ${{secrets.DOCKER_TKN}}
      
      # Checkout our Github Repo
      - name: Checkout Github Repo
        uses: actions/checkout@v2
        with:
            path: go/src/github.com/${{github.repository}}

      # Prepare the environment
      - name: Set up golang 1.19.2
        uses: actions/setup-go@v2
        with:
            go-version: '1.19.2'

      # Configure version variables and store in env. variables
      - name: Config Version Variables
        run: cd ${GOPATH}/src/github.com/${GITHUB_REPOSITORY} && ./.github/scripts/configure_versions_script.sh
      
      # Increment version, make translation catalogs, build anax binaries
      - name: Build Anax Binaries
        run: |
          cd ${GOPATH}/src/github.com/${GITHUB_REPOSITORY}
          make temp-mod-version       #Inc. Version?
          make i18n-catalog           #Traslations Catalog?
          make verbose=y                       #Build Anax Binary

      # - name: Make Debian Packages
      #   if: matrix.platform != 'mac'
      #   run: cd ${GOPATH}/src/github.com/${GITHUB_REPOSITORY} && make debpkgs
      #   env:
      #     VERSION: ${{env.ANAX_IMAGE_VERSION}}
      
      # - name: Deploy Debian Packages to Dockerhub
      #   #(need to build dckr with a tar filled with debs files)
      
      # - name: Make RPM Packages
      #   if: (matrix.architecture == 'amd64' || matrix.architecture == 'ppc64el') && matrix.platform != 'mac'
      #   run: cd ${GOPATH}/src/github.com/${GITHUB_REPOSITORY} && make rpmpkgs
      #   env:
      #     VERSION: ${{env.ANAX_IMAGE_VERSION}}

      # - name: Deploy RPM Packages to Dockerhub
      #   #(need to build dckr with tar filled with rpm files)

      # - name: Make Mac Packages
      #   if: (matrix.architecture == 'amd64' || matrix.architecture == 'arm64') && matrix.platform == 'mac'
      #   run: cd ${GOPATH}/src/github.com/${GITHUB_REPOSITORY} && make macpkg
      #   env:
      #     VERSION: ${{env.ANAX_IMAGE_VERSION}}

      # - name: Deploy Mac Packages to Dockerhub
      #   #(need to build dckr with tar filled with rpm files)

      # configure version env variables
      - name: Build Docker Images
        if: (matrix.architecture == 'amd64' || matrix.architecture == 'ppc64el' || matrix.architecture == 'arm64') && matrix.platform != 'mac'
        run: cd ${GOPATH}/src/github.com/${GITHUB_REPOSITORY} && ./.github/scripts/docker_build_script.sh

      

          


  # test:
  #   # The type of runner that the job will run on
  #   runs-on: ubuntu-20.04
  #   strategy:
  #     matrix:
  #       tests: ["NOLOOP=1", "NOLOOP=1 TEST_PATTERNS=sall"]
  #   env:
  #     GOPATH: /home/runner/work/anax/anax/go
  #   # Steps represent a sequence of tasks that will be executed as part of the job
  #   steps:
  #     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
  #     - uses: actions/checkout@v2
  #       with:
  #          path: go/src/github.com/${{github.repository}}
      
  #     # prepare the environment
  #     - name: Set up golang 1.19.2
  #       uses: actions/setup-go@v2
  #       with:
  #          go-version: '1.19.2'

  #     # build anax binaries
  #     - name: Build anax binaries
  #       run: cd ${GOPATH}/src/github.com/${GITHUB_REPOSITORY} && make
          
  #     # build the e2edev docker images 
  #     - name: Build the e2edev docker images
  #       run: cd ${GOPATH}/src/github.com/${GITHUB_REPOSITORY} && make -C test build-remote

  #     # E2E development test
  #     - name: E2E dev-test
  #       run: cd ${GOPATH}/src/github.com/${GITHUB_REPOSITORY} && make -C test clean && make -C test test TEST_VARS=${{matrix.tests}}
